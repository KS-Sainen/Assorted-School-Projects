import controlP5.*; //import ControlP5 library
import processing.serial.*;
Serial port;

String[] portList, controlText={"Scan Distance","Scan Color"},controlLabel={"U","L","R","D"},controlPacket={"p|1|0","p|0|0","p|0|1","p|1|1|1"};
String[] lines,settingText={"Motor X Axis IN0","Motor X Axis IN1","Motor X Axis IN2","Motor X Axis IN3","Motor Y Axis IN0","Motor Y Axis IN1","Motor Y Axis IN2","Motor Y Axis IN3","LED","S0","S1","S2","S3","OUT","Ultrasonic","Black Red","Black Green","Black Blue","White Red","White Green","White Blue","Color Scale"};//this contains all the settings
String path = "setting.txt";//leads the program to that file
String[][] prodData = new String[200][4];
String[][] atbDisplay = {{"Max:","Start:","Freq:","Height:"},{"Start:","Height:","Any:","Any:"},{"Start:","Freq:","Short:","Tall:"},{"Start:","Short:","Tall:","Any:"},{"Freq:","Red:","Green:","Blue:"}};

ControlP5 cp5; //create ControlP5 object
PFont font;
PImage img;
PFont tech,heading;

Textlabel connectLabel,connectLabel2,sL1,sL2,sL3,sL4,sL5,sL6,sL7,sL8,sL9,sL10,eL1,eL2,eL3,eL4,eL5,eL6,eL7;
Textlabel[] tg = new Textlabel[10], settingLabel = new Textlabel[22];
Button b1,b2,b3,b4,b5,b6,b7,b8;
Button[] bg = new Button[20],arrow = new Button[4],control = new Button[2];
Textfield tf1,tf2,tf3,tf4,tf5,tf6,tf7;
Textfield[] settings = new Textfield[22];
int[][] controlOffset = {{75,0},{0,75},{135,75},{75,130}}, controlSize={{60,70},{75,50},{75,50},{60,70}};
int[] settingSz = {8,6,7},readSepArray = new int[250];//for storing shenanigans out of readSep()
int margin=20,padding=25,xs=15,ys=15,mode=0,set4,page=0,toEdit=-1;//mode = state of the 2nd area
int numport=0,baud=9600,numprod=0,state=0;

Textlabel qTextLabel(String n,String f,int sz){
   return cp5.addTextlabel(n).setFont(createFont(f,sz));
}
Textlabel fTextLabel(String n,String t,int x,int y,String f,int sz){
  return qTextLabel(n,f,sz).setPosition(x,y).setText(t).setColor(color(0,0,0));
}
Button fButton(String n,String c,int px,int py,int sx,int sy){
  return cp5.addButton(n).setPosition(px,py).setSize(sx,sy).setCaptionLabel(c).setFont(heading);
}
Textfield fTextField(String n,int px,int py,int sx,int sy){
  return cp5.addTextfield(n).setPosition(px,py).setSize(sx,sy).setFont(tech).setColor(color(255,255,255));
}
boolean checkSep(int t,char c){
  if(t==0){
    return Character.isAlphabetic(c);  
  }else if(t==1){
    return c=='|';
  }
  return false;
}
//t -> 0=alphabet, 1=|
void readSep(String s,int t,int sz){
  readSepArray = new int[250];
  String r;
  if(t==0){
     r="a-z"; 
  }else{
     r="|"; 
  }
  readSepArray = int(split(s,r));
}
//utility function
String fillStr(String s,String f,int l){while(s.length() < l){s=s.concat(f);}return s;}
String getTableStr(int indx){
  return "   "+fillStr(Integer.toString(indx)," ",4)+fillStr(prodData[indx][0]," ",8)+fillStr(prodData[indx][1]," ",7)+fillStr(prodData[indx][2]," ",5)+prodData[indx][3]; 
}
boolean isNumeric(String str){
  return str != null && str.matches("[0-9.]+");
}
int[] set1=new int[8],set2=new int[7],set3=new int[7];
void setup(){
  //file IO + setting on the computer, ready to be imported over to the machine
  lines = loadStrings(path);
  set1=int(split(lines[0],'|'));set2=int(split(lines[1],'|'));set3=int(split(lines[2],'|'));//sMX=sMY,colUltPin,BWScale
  set4=int(lines[3]);
  println("Total Products : "+Integer.toString(set4));
  for(int i=0;i<set4;i++){
    prodData[i] = split(lines[4+i],'|');
    //printArray(prodData[i]);
  }
  //setup the whole thing
  size(850,550);//window size, (width, height)
  background(255,255,255);//sets background color
  cp5 = new ControlP5(this);
  //!fonts
  //String[] fontList = PFont.list();
  //printArray(fontList);//get fonts list
  font = createFont("Segoe UI", 18);    // custom fonts for buttons and title
  cp5.setFont(font);
  tech = createFont("Consolas",15);
  heading = createFont("Segoe UI",18);
  //img = loadImage("geopadoru.png"); // Load the original image
  //img.resize(70, 75);
  //!left side
  int xS = margin+padding;
  fButton("mode1","Dashboard",margin,xS+25,225,50);
  fButton("mode2","Products",margin,xS+200,225,50);
  fButton("mode3","Settings",margin,xS+375,225,50);
  //!right side - dashboard
  xS += 225;
  sL1=fTextLabel("label3","Ultrasonic : N/A = N/A cm",xS,margin+padding+25,"Consolas",18);
  sL2=fTextLabel("label4","Color : R = N/A = N/A",xS,margin+padding+50,"Consolas",18);
  sL3=fTextLabel("label5","        G = N/A = N/A",xS,margin+padding+75,"Consolas",18);
  sL4=fTextLabel("label6","        B = N/A = N/A",xS,margin+padding+100,"Consolas",18);
  sL5=fTextLabel("label7","",850-padding-margin-195,margin+padding+140,"Consolas",18);
  sL6=fTextLabel("label8","Counted : 0",850-padding-margin-195,margin+padding+140,"Consolas",18);
  sL7=fTextLabel("label9","Errored : 0",850-padding-margin-195,margin+padding+165,"Consolas",18);
  b1=fButton("command1","Count Products",850-padding-margin-195,margin+padding+25,200,50);
  b2=fButton("command2","Pause",850-padding-margin-195,margin+padding+80,95,50);
  b3=fButton("command3","Continue",850-padding-margin-90,margin+padding+80,95,50);
  for(int i=0;i<2;i++){control[i]=fButton("control"+Integer.toString(i),controlText[i],xS,margin+padding+130+(30*i),150,25);}
  for(int i=0;i<4;i++){arrow[i]=fButton("control"+Integer.toString(i+3),controlLabel[i],850-padding-margin-195+controlOffset[i][0],margin+padding+190+controlOffset[i][1],controlSize[i][0],controlSize[i][1]);}
  //!right side - products table
  b4=fButton("button1","<",xS,margin+padding+25,50,50);b4.hide();
  b5=fButton("button2",">",xS+55,margin+padding+25,50,50);b5.hide();
  sL8=fTextLabel("label10","Page : 1/5",xS+110,margin+padding+40,"Consolas",15);sL8.hide();
  sL9=fTextLabel("label11"," Index  ID   Count   Max  ScanStr",xS+30,margin+padding+80,"Consolas",15);sL9.hide();
  for(int i=0;i<10;i++){
    bg[i]=fButton("button"+Integer.toString(3+i),"E",xS,margin+padding+100+(30*i),25,25);bg[i].hide();
    tg[i]=fTextLabel("label"+Integer.toString(12+i),"   "+Integer.toString(i),xS+30,margin+padding+105+(30*i),"Consolas",15);tg[i].hide();
    if(i<set4){
      tg[i].setText(getTableStr(i));
    }
  }
  eL1=fTextLabel("label22","ID:",xS+105,margin+padding+405,"Consolas",18);eL1.hide();tf1=fTextField("form1",xS+170,margin+padding+405,50,25);tf1.hide();
  eL2=fTextLabel("label23","Max:",xS+105,margin+padding+430,"Consolas",18);eL2.hide();tf2=fTextField("form2",xS+170,margin+padding+430,50,25);tf2.hide();
  eL3=fTextLabel("label24","Mode:",xS+105,margin+padding+455,"Consolas",18);eL3.hide();tf3=fTextField("form3",xS+170,margin+padding+455,50,25);tf3.hide();
  eL4=fTextLabel("label25","A:",xS+230,margin+padding+405,"Consolas",18);eL4.hide();tf4=fTextField("form4",xS+300,margin+padding+405,50,25);tf4.hide();
  eL5=fTextLabel("label26","B:",xS+230,margin+padding+430,"Consolas",18);eL5.hide();tf5=fTextField("form5",xS+300,margin+padding+430,50,25);tf5.hide();
  eL6=fTextLabel("label27","C:",xS+230,margin+padding+455,"Consolas",18);eL6.hide();tf6=fTextField("form6",xS+300,margin+padding+455,50,25);tf6.hide();
  eL7=fTextLabel("label28","D:",xS+355,margin+padding+405,"Consolas",18);eL7.hide();tf7=fTextField("form7",xS+430,margin+padding+405,50,25);tf7.hide();
  b6=fButton("button13","Edit",xS,margin+padding+405,100,25);b6.hide();
  sL10=fTextLabel("label29","Index:-1",xS,margin+padding+430,"Consolas",18);sL10.hide();
  //!settings
  for(int i=0;i<22;i++){
    if(i>=11){
      settings[i]=fTextField("form"+Integer.toString(i+8),xS+450,margin+padding+50+(25*(i-11)),50,25);settings[i].hide();
      settingLabel[i]=fTextLabel("labelSetting"+Integer.toString(i),settingText[i],xS+300,margin+padding+50+(25*(i-11)),"Consolas",15);settingLabel[i].hide();
    }else{
      settings[i]=fTextField("form"+Integer.toString(i+8),xS+200,margin+padding+50+(25*i),50,25);settings[i].hide();
      settingLabel[i]=fTextLabel("labelSetting"+Integer.toString(i),settingText[i],xS,margin+padding+50+(25*i),"Consolas",15);settingLabel[i].hide();
    }
    if(i<=7){settings[i].setText(Integer.toString(set1[i]));}
    else if(i<=14){settings[i].setText(Integer.toString(set2[i-8]));}
    else{settings[i].setText(Integer.toString(set3[i-15]));}
  }
  b7=fButton("button14","Retrieve Settings",xS,margin+padding+330,200,25);b7.hide();
  b8=fButton("button15","Set Settings",xS,margin+padding+360,200,25);b8.hide();
  //!communication
  portList = Serial.list();
  printArray(portList);
  if(portList.length>0){port = null;}
  cp5.addScrollableList("select_port").setPosition(700, margin).setSize(100, 210).setBarHeight(25).setItemHeight(25).setFont(createFont("Segoe UI", 14)).addItems(portList);
  connectLabel=fTextLabel("label1","Status : N/A",550,margin+5,"Consolas",15);
  connectLabel2=fTextLabel("label2","Int : N/A",margin-5,margin+padding+425,"Consolas",12);
}
int mapRange(int n,int x1,int x2,int y1,int y2){
  return int(((n-x1)*(y2-y1)/(x2-x1))+y1);
}
void draw(){
  //productDrop.draw(this);
  background(255,255,255);
  String r = cp5.get(Textfield.class,"form3").getText();
  if(isNumeric(r)){
    int s = int(r);
    if(s>=0 && s<=4){
      eL4.setText(atbDisplay[s][0]);eL5.setText(atbDisplay[s][1]);eL6.setText(atbDisplay[s][2]);eL7.setText(atbDisplay[s][3]); 
    }
  }
  //button event
  for(int i=0;i<4;i++){
    if(port!=null && arrow[i].isPressed()){port.write(controlPacket[i]);println(controlPacket[i]);}
  }
  //port event
  while (port!=null && port.available() > 0) {
    String inStr = port.readString();
    char inType = inStr.charAt(0);
    println("Received packet : "+inStr);
    if(inType=='F'){
      inStr=inStr.substring(2);
      String[] splitStr=split(inStr,"|");
      printArray(splitStr);
      sL2.setText(String.format("Color : R = %d = %d",int(splitStr[0]),mapRange(int(splitStr[0]),set3[3],set3[0],0,255)));
      sL3.setText(String.format("        G = %d = %d",int(splitStr[1]),mapRange(int(splitStr[1]),set3[4],set3[1],0,255)));
      sL4.setText(String.format("        B = %d = %d",int(splitStr[2]),mapRange(int(splitStr[2]),set3[5],set3[2],0,255)));
    }else if(inType=='G'){
      inStr=inStr.substring(2);
      sL1.setText("Ultrasonic : "+int(inStr)+" = "+(int(inStr)/100)+"cm.");
    }
  }
}
//void select_prod(int n){
//  numprod=n;
//  port.write("query " + nf(n) + "\n");
//}
void mode1(){
  mode = 0;
  sL1.show();sL2.show();sL3.show();sL4.show();sL5.show();sL6.show();sL7.show();
  b1.show();b2.show();b3.show();
  b4.hide();b5.hide();sL8.hide();sL9.hide();sL10.hide();b6.hide();eL1.hide();eL2.hide();eL3.hide();eL4.hide();eL5.hide();eL6.hide();eL7.hide();
  tf1.hide();tf2.hide();tf3.hide();tf4.hide();tf5.hide();tf6.hide();tf7.hide();
  for(int i=0;i<2;i++){control[i].show();}
  for(int i=0;i<4;i++){arrow[i].show();}
  for(int i=0;i<10;i++){bg[i].hide();tg[i].hide();}
  for(int i=0;i<22;i++){settings[i].hide();settingLabel[i].hide();}
  b7.hide();b8.hide();
}
void mode2(){
  mode = 1;
  sL1.hide();sL2.hide();sL3.hide();sL4.hide();sL5.hide();sL6.hide();sL7.hide();
  b1.hide();b2.hide();b3.hide();
  b4.show();b5.show();sL8.show();sL9.show();sL10.show();b6.show();eL1.show();eL2.show();eL3.show();eL4.show();eL5.show();eL6.show();eL7.show();
  tf1.show();tf2.show();tf3.show();tf4.show();tf5.show();tf6.show();tf7.show();
  for(int i=0;i<2;i++){control[i].hide();}
  for(int i=0;i<4;i++){arrow[i].hide();}
  for(int i=0;i<10;i++){bg[i].show();tg[i].show();}
  for(int i=0;i<22;i++){settings[i].hide();settingLabel[i].hide();}
  b7.hide();b8.hide();
}
void mode3(){
  mode = 2;
  sL1.hide();sL2.hide();sL3.hide();sL4.hide();sL5.hide();sL6.hide();sL7.hide();
  b1.hide();b2.hide();b3.hide();
  b4.hide();b5.hide();sL8.hide();sL9.hide();sL10.hide();b6.hide();eL1.hide();eL2.hide();eL3.hide();eL4.hide();eL5.hide();eL6.hide();eL7.hide();
  tf1.hide();tf2.hide();tf3.hide();tf4.hide();tf5.hide();tf6.hide();tf7.hide();
  for(int i=0;i<2;i++){control[i].hide();}
  for(int i=0;i<4;i++){arrow[i].hide();}
  for(int i=0;i<10;i++){bg[i].hide();tg[i].hide();}
  for(int i=0;i<22;i++){settings[i].show();settingLabel[i].show();}
  b7.show();b8.show();
}
void updatePages(){
  for(int i=0;i<10;i++){
     if(set4 > (10*page + i)){
       tg[i].setText(getTableStr(i));
     }else{
       tg[i].setText("   "+Integer.toString(10*page + i));
     }
  }
  sL8.setText("Page : "+Integer.toString(page+1)+"/5");
}
void transcribeEditData(int n){
  if(set4<=n){
    toEdit=set4;
    tf1.setText("0");tf2.setText("0");tf3.setText("0");tf4.setText("0");tf5.setText("0");tf6.setText("0");tf7.setText("0");
  }else{
    tf1.setText(prodData[n][0]);tf2.setText(prodData[n][2]);tf3.setText("0");tf4.setText("0");tf5.setText("0");tf6.setText("0");tf7.setText("0");
    toEdit=n;
  }
  sL10.setText("Index:"+Integer.toString(toEdit));
}
void button3(){transcribeEditData(10*page);}
void button4(){transcribeEditData(10*page + 1);}
void button5(){transcribeEditData(10*page + 2);}
void button6(){transcribeEditData(10*page + 3);}
void button7(){transcribeEditData(10*page + 4);}
void button8(){transcribeEditData(10*page + 5);}
void button9(){transcribeEditData(10*page + 6);}
void button10(){transcribeEditData(10*page + 7);}
void button11(){transcribeEditData(10*page + 8);}
void button12(){transcribeEditData(10*page + 9);}
void button1(){if(page>0){page--;}updatePages();}
void button2(){if(page<4){page++;}updatePages();}
void control0(){if(port!=null){port.write("l");}}
void control1(){if(port!=null){port.write("k|0");}}
void command1(){if(port!=null){port.write("a");}}
void select_port(int n) {
  numport=n;
  try{

    // If you don't do this, you can't re-connect to the same port again.
    // Re-connecting to the same port gives you a new "myPort ID" and may
    // take a few seconds.
    if(port != null){
      port.clear();
      port.stop();
    }

    // Create a Serial Port connection.
    port = new Serial(this, portList[numport], baud);

    // User message.
    println("Connected to portName: " + portList[numport]);
    println("myPort = " + port);
    connectLabel2.setText("INT : " + port);
    connectLabel.setText("Status : Ready");
    delay(1000);

  }
  catch(Exception e){

    // User message.
    println("Error connecting to portName: " + portList[numport]);

    // Print detailed error information to the console.
    System.err.println(e);
    e.printStackTrace();
  }
}
